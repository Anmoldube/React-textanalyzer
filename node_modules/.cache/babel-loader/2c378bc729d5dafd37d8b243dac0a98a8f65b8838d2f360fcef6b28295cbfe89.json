{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anmol\\\\Desktop\\\\react\\\\hello\\\\src\\\\components\\\\TextFrom.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport backgroundVideo from '../videob.mp4'; // Provide the correct path to your video file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm() {\n  _s();\n  const [text, setText] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('english'); // Default language is English\n  const {\n    transcript,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n    listening\n  } = useSpeechRecognition();\n\n  // Dummy translation functions (replace with actual translations)\n  const translateToHindi = text => {\n    return `Translated to Hindi: ${text}`;\n  };\n  const translateToFrench = text => {\n    return `Translated to French: ${text}`;\n  };\n  const translateText = text => {\n    switch (selectedLanguage) {\n      case 'hindi':\n        return translateToHindi(text);\n      case 'french':\n        return translateToFrench(text);\n      default:\n        return text;\n    }\n  };\n  const handleLanguageChange = language => {\n    setSelectedLanguage(language);\n    setText(translateText(text)); // Translate existing text to the selected language\n  };\n\n  // ... (rest of your existing code)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-primary mx-1 my-2 ${selectedLanguage === 'english' ? 'active' : ''}`,\n        onClick: () => handleLanguageChange('english'),\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-primary mx-1 my-2 ${selectedLanguage === 'hindi' ? 'active' : ''}`,\n        onClick: () => handleLanguageChange('hindi'),\n        children: \"\\u0939\\u093F\\u0902\\u0926\\u0940\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-primary mx-1 my-2 ${selectedLanguage === 'french' ? 'active' : ''}`,\n        onClick: () => handleLanguageChange('french'),\n        children: \"Fran\\xE7ais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"SGokDAB6heQdIccPbCcT7BebvrA=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","SpeechRecognition","useSpeechRecognition","backgroundVideo","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","_s","text","setText","selectedLanguage","setSelectedLanguage","transcript","resetTranscript","browserSupportsSpeechRecognition","listening","translateToHindi","translateToFrench","translateText","handleLanguageChange","language","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anmol/Desktop/react/hello/src/components/TextFrom.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport backgroundVideo from '../videob.mp4'; // Provide the correct path to your video file\r\n\r\nexport default function TextForm() {\r\n  const [text, setText] = useState('');\r\n  const [selectedLanguage, setSelectedLanguage] = useState('english'); // Default language is English\r\n  const { transcript, resetTranscript, browserSupportsSpeechRecognition, listening } = useSpeechRecognition();\r\n\r\n  // Dummy translation functions (replace with actual translations)\r\n  const translateToHindi = (text) => {\r\n    return `Translated to Hindi: ${text}`;\r\n  };\r\n\r\n  const translateToFrench = (text) => {\r\n    return `Translated to French: ${text}`;\r\n  };\r\n\r\n  const translateText = (text) => {\r\n    switch (selectedLanguage) {\r\n      case 'hindi':\r\n        return translateToHindi(text);\r\n      case 'french':\r\n        return translateToFrench(text);\r\n      default:\r\n        return text;\r\n    }\r\n  };\r\n\r\n  const handleLanguageChange = (language) => {\r\n    setSelectedLanguage(language);\r\n    setText(translateText(text)); // Translate existing text to the selected language\r\n  };\r\n\r\n  // ... (rest of your existing code)\r\n\r\n  return (\r\n    <>\r\n      {/* ... (your existing JSX code) */}\r\n\r\n      {/* Language selection buttons */}\r\n      <div className=\"language-buttons\">\r\n        <button className={`btn btn-primary mx-1 my-2 ${selectedLanguage === 'english' ? 'active' : ''}`} onClick={() => handleLanguageChange('english')}>\r\n          English\r\n        </button>\r\n        <button className={`btn btn-primary mx-1 my-2 ${selectedLanguage === 'hindi' ? 'active' : ''}`} onClick={() => handleLanguageChange('hindi')}>\r\n          हिंदी\r\n        </button>\r\n        <button className={`btn btn-primary mx-1 my-2 ${selectedLanguage === 'french' ? 'active' : ''}`} onClick={() => handleLanguageChange('french')}>\r\n          Français\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAClF,OAAOC,eAAe,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACrE,MAAM;IAAEc,UAAU;IAAEC,eAAe;IAAEC,gCAAgC;IAAEC;EAAU,CAAC,GAAGf,oBAAoB,CAAC,CAAC;;EAE3G;EACA,MAAMgB,gBAAgB,GAAIR,IAAI,IAAK;IACjC,OAAQ,wBAAuBA,IAAK,EAAC;EACvC,CAAC;EAED,MAAMS,iBAAiB,GAAIT,IAAI,IAAK;IAClC,OAAQ,yBAAwBA,IAAK,EAAC;EACxC,CAAC;EAED,MAAMU,aAAa,GAAIV,IAAI,IAAK;IAC9B,QAAQE,gBAAgB;MACtB,KAAK,OAAO;QACV,OAAOM,gBAAgB,CAACR,IAAI,CAAC;MAC/B,KAAK,QAAQ;QACX,OAAOS,iBAAiB,CAACT,IAAI,CAAC;MAChC;QACE,OAAOA,IAAI;IACf;EACF,CAAC;EAED,MAAMW,oBAAoB,GAAIC,QAAQ,IAAK;IACzCT,mBAAmB,CAACS,QAAQ,CAAC;IAC7BX,OAAO,CAACS,aAAa,CAACV,IAAI,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;;EAED;;EAEA,oBACEL,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eAIElB,OAAA;MAAKmB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC/BlB,OAAA;QAAQmB,SAAS,EAAG,6BAA4BZ,gBAAgB,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG,EAAE;QAACa,OAAO,EAAEA,CAAA,KAAMJ,oBAAoB,CAAC,SAAS,CAAE;QAAAE,QAAA,EAAC;MAElJ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTxB,OAAA;QAAQmB,SAAS,EAAG,6BAA4BZ,gBAAgB,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAG,EAAE;QAACa,OAAO,EAAEA,CAAA,KAAMJ,oBAAoB,CAAC,OAAO,CAAE;QAAAE,QAAA,EAAC;MAE9I;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTxB,OAAA;QAAQmB,SAAS,EAAG,6BAA4BZ,gBAAgB,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAG,EAAE;QAACa,OAAO,EAAEA,CAAA,KAAMJ,oBAAoB,CAAC,QAAQ,CAAE;QAAAE,QAAA,EAAC;MAEhJ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACN,CAAC;AAEP;AAACpB,EAAA,CAlDuBD,QAAQ;EAAA,QAGuDN,oBAAoB;AAAA;AAAA4B,EAAA,GAHnFtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}