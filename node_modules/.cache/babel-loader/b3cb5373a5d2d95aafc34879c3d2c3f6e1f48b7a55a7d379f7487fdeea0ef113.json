{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anmol\\\\Desktop\\\\react\\\\hello\\\\src\\\\components\\\\TextFrom.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport backgroundVideo from '../videob.mp4'; // Provide the correct path to your video file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm() {\n  _s();\n  const [text, setText] = useState('');\n  const {\n    transcript,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n    listening\n  } = useSpeechRecognition();\n  const handleStartListening = () => {\n    if (browserSupportsSpeechRecognition) {\n      resetTranscript();\n      SpeechRecognition.startListening({\n        continuous: true\n      });\n    }\n  };\n  const translateToHindi = text => {\n    return `Translated to Hindi: ${text}`;\n  };\n  const translateToFrench = text => {\n    return `Translated to French: ${text}`;\n  };\n  const translateText = text => {\n    switch (selectedLanguage) {\n      case 'hindi':\n        return translateToHindi(text);\n      case 'french':\n        return translateToFrench(text);\n      default:\n        return text;\n    }\n  };\n  const handleStopListening = () => {\n    if (browserSupportsSpeechRecognition) {\n      SpeechRecognition.stopListening();\n      setText(transcript);\n    }\n  };\n  const handleUpClick = () => {\n    let newtext = text.toUpperCase();\n    setText(newtext);\n  };\n  const handleToLowercase = () => {\n    let newtext = text.toLowerCase();\n    setText(newtext);\n  };\n  const handleCopyText = () => {\n    navigator.clipboard.writeText(text);\n  };\n  const handleClearText = () => {\n    setText('');\n    resetTranscript();\n  };\n  const handleExtraSpaces = () => {\n    let newText = text.replace(/\\s+/g, ' ');\n    setText(newText.trim());\n  };\n  const handleTextToSpeech = () => {\n    const speechUtterance = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(speechUtterance);\n  };\n  const handleSpeechRecognition = event => {\n    setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cover home\",\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            className: \"text-white\",\n            children: [\"Enter The Text To Analyze \", /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-dark bg-success-subtle my-1 mt-2\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n          zIndex: -1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: backgroundVideo,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-wrap my-1 \",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control center my-1 mx-1 text-bg-dark\",\n          id: \"mybox\",\n          value: text,\n          onChange: handleSpeechRecognition,\n          rows: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn bg-primary mx-1 my-2\",\n          onClick: handleUpClick,\n          children: \"Convert to uppercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn bg-primary mx-1 my-2\",\n          onClick: handleToLowercase,\n          children: \"Convert to lowercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn bg-primary mx-1 my-2\",\n          onClick: handleCopyText,\n          children: \"Copy Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn bg-primary mx-1 my-2\",\n          onClick: handleClearText,\n          children: \"Clear text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn1 btn bg-primary mx-1 my-2\",\n          onClick: handleExtraSpaces,\n          children: \"Remove extra spaces\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn1 btn bg-primary mx-1 my-2\",\n          onClick: handleTextToSpeech,\n          children: \"Listen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn1 btn bg-primary mx-1 my-2\",\n          onClick: handleStartListening,\n          children: \"Start speaking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn1 btn bg-primary mx-1 my-2\",\n          onClick: handleStopListening,\n          children: \"Stop speaking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: listening ? 'Listening...' : 'Not Listening'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), listening && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"speech-recognition-output\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Listening...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: transcript\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"text-light\",\n        children: \"Your Text Summary Is\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"text-light mt-3\",\n        children: [text.split(' ').length - 1, \" Words and \", text.length, \" Characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"text-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: [\"It may take approximately \", 0.008 * (text.split(' ').length - 1), \" minutes to read.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"AwrfIwav4BptPNWT1reK1jMz97w=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","SpeechRecognition","useSpeechRecognition","backgroundVideo","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","_s","text","setText","transcript","resetTranscript","browserSupportsSpeechRecognition","listening","handleStartListening","startListening","continuous","translateToHindi","translateToFrench","translateText","selectedLanguage","handleStopListening","stopListening","handleUpClick","newtext","toUpperCase","handleToLowercase","toLowerCase","handleCopyText","navigator","clipboard","writeText","handleClearText","handleExtraSpaces","newText","replace","trim","handleTextToSpeech","speechUtterance","SpeechSynthesisUtterance","window","speechSynthesis","speak","handleSpeechRecognition","event","target","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","autoPlay","loop","muted","style","position","top","left","width","height","objectFit","zIndex","src","type","id","onChange","rows","onClick","split","length","_c","$RefreshReg$"],"sources":["C:/Users/anmol/Desktop/react/hello/src/components/TextFrom.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport backgroundVideo from '../videob.mp4'; // Provide the correct path to your video file\r\n\r\nexport default function TextForm() {\r\n  const [text, setText] = useState('');\r\n  const { transcript, resetTranscript, browserSupportsSpeechRecognition, listening } = useSpeechRecognition();\r\n\r\n  const handleStartListening = () => {\r\n    if (browserSupportsSpeechRecognition) {\r\n      resetTranscript();\r\n      SpeechRecognition.startListening({ continuous: true });\r\n    }\r\n  };\r\n  const translateToHindi = (text) => {\r\n    return `Translated to Hindi: ${text}`;\r\n  };\r\n\r\n  const translateToFrench = (text) => {\r\n    return `Translated to French: ${text}`;\r\n  };\r\n\r\n  const translateText = (text) => {\r\n    switch (selectedLanguage) {\r\n      case 'hindi':\r\n        return translateToHindi(text);\r\n      case 'french':\r\n        return translateToFrench(text);\r\n      default:\r\n        return text;\r\n    }\r\n  };\r\n  const handleStopListening = () => {\r\n    if (browserSupportsSpeechRecognition) {\r\n      SpeechRecognition.stopListening();\r\n      setText(transcript);\r\n    }\r\n  };\r\n\r\n  const handleUpClick = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n  };\r\n\r\n  const handleToLowercase = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n  };\r\n\r\n  const handleCopyText = () => {\r\n    navigator.clipboard.writeText(text);\r\n  };\r\n\r\n  const handleClearText = () => {\r\n    setText('');\r\n    resetTranscript();\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.replace(/\\s+/g, ' ');\r\n    setText(newText.trim());\r\n  };\r\n\r\n  const handleTextToSpeech = () => {\r\n    const speechUtterance = new SpeechSynthesisUtterance(text);\r\n    window.speechSynthesis.speak(speechUtterance);\r\n  };\r\n\r\n  const handleSpeechRecognition = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"my-2\">\r\n        <h1>\r\n        <div className=\"cover home\">\r\n  <center className=\"text-white\">\r\n    Enter The Text To Analyze <p className=\"text-dark bg-success-subtle my-1 mt-2\">Home</p>\r\n  </center>\r\n</div>\r\n\r\n        </h1>\r\n        {/* Background video */}\r\n        <video\r\n          autoPlay\r\n          loop\r\n          muted\r\n          style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            objectFit: 'cover',\r\n            zIndex: -1,\r\n          }}\r\n        >\r\n          <source src={backgroundVideo} type=\"video/mp4\" />\r\n        </video>\r\n\r\n        <div className=\"text-wrap my-1 \">\r\n          <textarea\r\n            className=\"form-control center my-1 mx-1 text-bg-dark\"\r\n            id=\"mybox\"\r\n            value={text}\r\n            onChange={handleSpeechRecognition}\r\n            rows={10}\r\n          />\r\n          <button className=\"btn btn bg-primary mx-1 my-2\" onClick={handleUpClick}>\r\n            Convert to uppercase\r\n          </button>\r\n          <button className=\"btn btn bg-primary mx-1 my-2\" onClick={handleToLowercase}>\r\n            Convert to lowercase\r\n          </button>\r\n          <button className=\"btn btn bg-primary mx-1 my-2\" onClick={handleCopyText}>\r\n            Copy Text\r\n          </button>\r\n          <button className=\"btn btn bg-primary mx-1 my-2\" onClick={handleClearText}>\r\n            Clear text\r\n          </button>\r\n          <button className=\"btn1 btn bg-primary mx-1 my-2\" onClick={handleExtraSpaces}>\r\n            Remove extra spaces\r\n          </button>\r\n          <button className=\"btn1 btn bg-primary mx-1 my-2\" onClick={handleTextToSpeech}>\r\n            Listen\r\n          </button>\r\n          <button className=\"btn1 btn bg-primary mx-1 my-2\" onClick={handleStartListening}>\r\n            Start speaking\r\n          </button>\r\n          <button className=\"btn1 btn bg-primary mx-1 my-2\" onClick={handleStopListening}>\r\n            Stop speaking\r\n          </button>\r\n          <div>{listening ? 'Listening...' : 'Not Listening'}</div>\r\n          {listening && (\r\n            <div className=\"speech-recognition-output\">\r\n              <p>Listening...</p>\r\n              <p>{transcript}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-2\"></div>\r\n      <h3>\r\n        <center className=\"text-light\">Your Text Summary Is</center>\r\n      </h3>\r\n      <p>\r\n        <center className=\"text-light mt-3\">\r\n          {text.split(' ').length - 1} Words and {text.length} Characters\r\n        </center>\r\n      </p>\r\n      <p>\r\n        <center className=\"text-light\">\r\n          <i>It may take approximately {0.008 * (text.split(' ').length - 1)} minutes to read.</i>\r\n        </center>\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}